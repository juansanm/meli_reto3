version: "3.9"

services:
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  db:
    image: timescale/timescaledb:latest-pg14
    container_name: devices_pg
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: ml
      POSTGRES_PASSWORD: mlpass
      POSTGRES_DB: devices
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - devices_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ml -d devices"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - devices_network

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: devices_pgadmin
    ports:
      - "5056:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@devices.local
      PGADMIN_DEFAULT_PASSWORD: adminpass123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - devices_pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_servers.json:/pgadmin4/servers.json:ro
    # Ejecutar como usuario noâ€‘root (5050 es el UID del contenedor oficial)
    user: "5050:5050"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - devices_network
    entrypoint: >
      /bin/sh -c "
      mkdir -p /var/lib/pgadmin &&
      chown -R 5050:5050 /var/lib/pgadmin &&
      /entrypoint.sh
      "

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: devices_predictor_api
    ports:
      - "18001:8000"
    environment:
      DB_DSN: postgresql://ml:mlpass@db:5432/devices
      MODEL_PATH: /models/best_model.keras 
      TZ: America/Argentina/Buenos_Aires
    volumes:
      - ./api:/app:ro               # cÃ³digo de la API
      - ./models:/models:ro     # modelo .keras
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - devices_network
    command: >
      sh -c "
      echo 'ðŸš€ Iniciando API de predicciÃ³n...' &&
      echo 'ðŸ“‚ Contenido de /app/models:' &&
      ls -la /models || true &&
      uvicorn main:app --host 0.0.0.0 --port 8000
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
volumes:
  devices_db_data:
  devices_pgadmin_data:

networks:
  devices_network:
    driver: bridge
